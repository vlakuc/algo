#!/bin/bash

if [ -z "$TV_IP" ]
then
    printf 'Please set up TV_IP\n' >&2
    exit 1
fi

if [ -z "$BUILDENV_INSTALL_DIR" ]
then
    print 'Please set up BUILDENV_INSTALL_DIR\n' >&2
    exit 2
fi

export LMQR2_UDPHOST=$TV_IP:12321
export LD_LIBRARY_PATH=../lib





#export BOOST_TEST_SHOW_PROGRESS=yes
export BOOST_TEST_LOG_LEVEL=all




#RUN_CMD="valgrind --leak-check=full --track-origins=yes ./frame-app-runner -f ../lib/libapp-biz-proxy.so -f ../lib/libapp-biz-test-env.so"

#RUN_CMD="gdb --args ./frame-app-runner -f ../lib/libapp-biz-proxy.so -f ../lib/libapp-biz-test-env.so"
RUN_CMD="./frame-app-runner -f ../lib/libapp-biz-proxy.so -f ../lib/libapp-biz-test-env.so"

cd $BUILDENV_INSTALL_DIR/linuxhost+host+*/bin


case $1 in
    -s) export BOOST_TESTS_TO_RUN=UnreworkedTests/*TestEnvServiceList*
        ;;
    -t) export BOOST_TESTS_TO_RUN=UnreworkedTests/*TestEnvTimerList*
        ;;
    -r) export BOOST_TESTS_TO_RUN=UnreworkedTests/*TestEnvRecordingList*
        ;;
    -dr) export BOOST_TESTS_TO_RUN=UnreworkedTests/*TestEnvRecordingDelete*
        ;;
    *) printf 'Unknown parameter\n' >&2
        exit 1
        ;;
esac


# if [ "$2" == "gdb"  ]
# then
#     gdb --args $RUN_CMD 
# elif [ "$2" == "core"  ]
# then
#     gdb --args $RUN_CMD core 
# else
#     rm ./core
#     echo $RUN_CMD
#     $RUN_CMD 2>&1 | tee log.txt
# fi
$RUN_CMD 2>&1 | tee log.txt


